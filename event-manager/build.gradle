
plugins {
  id 'groovy'
  id 'idea'
  id 'jp.classmethod.aws.lambda' version '0.28'
}

repositories {
  mavenCentral()
}

aws {
  region = "eu-west-1"
}

dependencies {
  compile 'org.codehaus.groovy:groovy-all:2.4.7'
  compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
  compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
  compile 'com.amazonaws:aws-lambda-java-events:1.1.0'
  compile 'com.google.zxing:core:3.2.0'
  compile 'com.google.zxing:javase:3.2.0'
  compile 'org.apache.xmlgraphics:batik-transcoder:1.8'
  compile 'org.apache.xmlgraphics:batik-codec:1.7'
  compile 'org.apache.xmlgraphics:xmlgraphics-commons:2.1'
  compile 'org.apache.xmlgraphics:fop:2.1'
  compile "org.twitter4j:twitter4j-core:4.0.4"
  compile "org.twitter4j:twitter4j-stream:4.0.4"
  compile "org.twitter4j:twitter4j-async:4.0.4"
  compile "org.twitter4j:twitter4j-media-support:4.0.4"
  compile "org.twitter4j:twitter4j-httpclient-support:2.2.6"
  compile 'log4j:log4j:1.2.17'
  testCompile 'junit:junit:4.12'
}

task buildZip(type: Zip, dependsOn: classes) {
  from compileGroovy
  from processResources
  into ('fonts') {
    from file('fonts')
  }
  into('lib') {
    from configurations.runtime
  }           
}

build.dependsOn buildZip

test {
  systemProperties = System.getProperties().findAll { key, value ->
    key.startsWith('latcraft')
  } + project.properties.findAll { key, value ->
    key.startsWith('latcraft')
  } + gradle.properties.findAll { key, value ->
    key.startsWith('latcraft')
  }
}

